{"version":3,"sources":["1_main/m1-UI/Header/Header.module.css","1_main/m1-UI/common/c2-SuperButton/SuperButton.module.css","1_main/m1-UI/common/c1-SuperInputText/SuperInputText.module.css","1_main/m1-UI/common/c5-SuperSelect/SuperSelect.module.css","2_feaches_HW/f1-auth/a4_error404/Error.module.css","1_main/m1-UI/common/c3-SuperCheckbox/SuperCheckbox.module.css","1_main/m1-UI/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","1_main/m1-UI/common/c6-SuperRadio/SuperRadio.module.css","1_main/m1-UI/common/c2-SuperButton/SuperButton.tsx","1_main/m1-UI/common/c3-SuperCheckbox/SuperCheckbox.tsx","1_main/m1-UI/common/c1-SuperInputText/SuperInputText.tsx","1_main/m1-UI/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","1_main/m1-UI/common/c5-SuperSelect/SuperSelect.tsx","1_main/m1-UI/common/c7-SuperRange/SuperRange.tsx","1_main/m1-UI/common/c6-SuperRadio/SuperRadio.tsx","2_feaches_HW/f0-test/test.tsx","1_main/m3_DAL/API/api-common.tsx","1_main/m2_BLL/0n_App-reduser.ts","1_main/m2_BLL/1n_Auth-reduser.ts","2_feaches_HW/f1-auth/a1_login/Login.tsx","assets/image/SmoothJauntyBighornedsheep-max-1mb.gif","2_feaches_HW/f1-auth/a4_error404/Error404.tsx","2_feaches_HW/f1-auth/a3_profile/Profile.tsx","2_feaches_HW/f1-auth/a2_registration/Registration.tsx","2_feaches_HW/f1-auth/a4_password/PasswordRecovery.tsx","1_main/m1-UI/routes/Routes.tsx","1_main/m1-UI/Header/Header.tsx","1_main/m1-UI/App.tsx","reportWebVitals.ts","1_main/m2_BLL/store.ts","index.tsx","2_feaches_HW/f0-test/test.module.css"],"names":["module","exports","SuperButton","red","restProps","className","finalClassName","disabled","s","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","e","currentTarget","checked","checkbox","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalInputClassName","errorInput","superInput","value","key","placeholder","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","onDoubleClickCallBack","src","icon","alt","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","wrapper","select","SuperRange","onChangeRange","finalRangeClassName","range","SuperRadio","name","onChangeCallback","radio","arr","Test","text","setText","setChecked","RangeValue","setRangeValue","setValue","style","textAlign","main","column","header","alert","onClick","undefined","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","emailUser","emailFromWho","message","from","initialState","SET_IS_ERROR","setAppErrorAC","payload","isRegistrated","isLoggedIn","SET_IS_REGISTRATED","SET_IS_LOGGED_IN","SET_EMAIL_PASSWORD_RECOVERY","RegistrateTC","dispatch","then","res","catch","response","data","LoginInTC","setEmailForPasswordRecoveryTC","setEmailForPasswordRecoveryAC","Login","useDispatch","useSelector","store","login","app","setEmail","setPassword","setRememberMe","useEffect","to","target","PATH","FORGOT_PAGE","preventDefault","href","Error404","container","a","b","Img","Profile","Registration","password2","setPassword2","id","PasswordRecovery","START_PAGE","TEST_PAGE","LOGIN_PAGE","ERROR404_PAGE","PROFILE_PAGE","REGISTRATION_PAGE","Routing","path","element","Header","mainMenu","mainMenuChecked","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","state","action","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3ac08d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3r5y5\",\"check-menu\":\"Header_check-menu__12-Dq\",\"mainMenu\":\"Header_mainMenu__1TIi7\",\"mainMenuChecked\":\"Header_mainMenuChecked__2UWRa\",\"item\":\"Header_item__3sm6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1qeTU\",\"red\":\"SuperButton_red__1_UVt\",\"disabled\":\"SuperButton_disabled__8ldy2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2GI8z\",\"errorInput\":\"SuperInputText_errorInput__3aGQv\",\"error\":\"SuperInputText_error__16ZuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SuperSelect_wrapper__MTryA\",\"select\":\"SuperSelect_select__3-8_0\",\"option\":\"SuperSelect_option__1ygZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error_container__5irRK\",\"a\":\"Error_a__2-S8m\",\"b\":\"Error_b__2_s3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3uo54\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"SuperEditableSpan_icon__11M45\",\"className\":\"SuperEditableSpan_className__2bSQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__1kzJP\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n const finalClassName =  restProps.disabled ? `${s.default} ${s.disabled}` : (red ? `${s.default} ${s.red}` : s.default)\n\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={s.checkbox}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    /*const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`*/\n    const finalInputClassName = error? `${s.errorInput} ${s.superInput}`: `${s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                placeholder={error}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport s from './SuperEditableSpan.module.css'\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\n\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        // выключить editMode при нажатии Enter\n        onEnter && onEnter()\n\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n       setEditMode(false)\n        // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e)\n    }\n    const spanClassName = s.className\n\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (<>\n                    <img onDoubleClick={onDoubleClickCallBack}\n                        src={'https://i.pinimg.com/originals/7c/ef/ec/7cefec18b132e4f74b4b41e172698230.png'}\n                         className={s.icon}\n                          alt={'icon'}/>\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n                        {...restSpanProps}>\n\n                    {children || restProps.value}\n                            </span>\n                </>)\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport s from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <option key={i} value={o} className={s.option}>{o}</option>\n    )) : []\n\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (<div className={s.wrapper}>\n            <select onChange={onChangeCallback} {...restProps} className={s.select}>\n                {mappedOptions}\n            </select>\n    </div>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\n\n    return (\n        <div>\n            <input\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </div>\n    )\n}\n\nexport default SuperRange\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                name={name}\n                value={o}\n                onChange={onChangeCallback}\n                checked={ o === value }\n                {...restProps}\n                className={s.radio}\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react';\r\nimport SuperButton from \"../../1_main/m1-UI/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../1_main/m1-UI/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../1_main/m1-UI/common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperInputText from \"../../1_main/m1-UI/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperSelect from \"../../1_main/m1-UI/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRange from \"../../1_main/m1-UI/common/c7-SuperRange/SuperRange\";\r\nimport s from '../f0-test/test.module.css'\r\nimport SuperRadio from \"../../1_main/m1-UI/common/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nconst Test = () => {\r\n    //for SuperInput\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    //for SuperCheckbox\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    // for SuperRange\r\n    const [RangeValue, setRangeValue] = useState(0)\r\n    const onChangeRange = (RangeValue: number) => {\r\n        setRangeValue(RangeValue)\r\n    }\r\n\r\n\r\n    //for SuperEditableSpan\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    //for SuperRadio\r\n    const [option, onChangeOption] = useState(arr[1])\r\n\r\n    return (<>\r\n            <h2 style={{textAlign: 'center'}}> TEST </h2>\r\n            <div className={s.main}>\r\n                <div className={s.column}>\r\n                    <h3 className={s.header}>Инпут</h3>\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}/>\r\n                    <SuperInputText />\r\n                </div>\r\n                <div className={s.column}>\r\n                    <h3 className={s.header}>Кнопки </h3>\r\n                        <SuperButton onClick={()=>alert('click <default>')}> default </SuperButton>\r\n                        <SuperButton red onClick={()=>alert('click <delete>')}> delete </SuperButton>\r\n                        <SuperButton disabled> disabled </SuperButton>\r\n                </div>\r\n                <div className={s.column}>\r\n                    <h3 className={s.header}>Чек-Бокс </h3>\r\n                    <SuperCheckbox\r\n                        checked={checked}\r\n                        onChangeChecked={setChecked}>\r\n                        some text\r\n                    </SuperCheckbox>\r\n                </div>\r\n                <div className={s.column}>\r\n                    <h3 className={s.header}> Редактируемое поле </h3>\r\n                    <div>\r\n                        <SuperEditableSpan\r\n                            value={value}\r\n                            onChangeText={setValue}\r\n                            spanProps={{children: value ? undefined : 'enter text...'}}/></div>\r\n                </div>\r\n                <div className={s.column}>\r\n                    <h3 className={s.header}> Селектор и радио-кнопка </h3>\r\n                    <div>\r\n                        <SuperRadio\r\n                            name={'radio'}\r\n                            options={arr}\r\n                            value={value}\r\n                            onChangeOption={onChangeOption}/>\r\n                    </div>\r\n                <br/>\r\n                    <SuperSelect\r\n                        options={arr}\r\n                        value={option}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n\r\n                </div>\r\n                <div className={s.column}>\r\n                    <h3 className={s.header}> Диапазон </h3>\r\n                    <div>\r\n                        <span>{RangeValue}</span>\r\n                        <SuperRange\r\n                            onChangeRange={onChangeRange}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Test;","import axios, {AxiosResponse} from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    //baseURL: 'http://localhost:7542/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<{ email: string, password: string, rememberMe: boolean }, AxiosResponse<ResponseType<UserType>>>('2.0/auth/login', {\r\n            email,\r\n            password,\r\n            rememberMe\r\n        })\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<{ email: string, password: string }, AxiosResponse<ResponseType<UserType>>>('2.0/auth/register', {\r\n            email,\r\n            password\r\n        })\r\n    },\r\n    me() {\r\n        return instance.post<ResponseType<UserType>>('2.0/auth/me')\r\n    },\r\n    addPersonalData(name: string, avatar: string) {\r\n        return instance.put<{ name: string, avatar: string }, AxiosResponse<ResponseType<UserType>>>('2.0/auth/me', {\r\n            name,\r\n            avatar\r\n        })\r\n    },\r\n    delete() {\r\n        return instance.delete<ResponseType<{ info: string }>>('2.0/auth/me')\r\n    },\r\n    forgotPassword(emailUser: string, emailFromWho?: string) {\r\n        //вместо локал в message добавить нашу gt-page и на стр на которой восстановление пароля\r\n        const message: string = `<div style=\"background-color: lime; padding: 15px\"> password recovery link: <a href='https://mayariff.github.io/cards_project/#/set-new-password/$token$'> link</a></div>`\r\n        return instance.post<{ email: string, message: string, from?: string }, AxiosResponse<ResponseType<{ info: string }>>>('2.0/auth/forgot', {\r\n            email: emailUser,\r\n            message,\r\n            from: emailFromWho\r\n        })\r\n    },\r\n    recowerPassword(password: string, token: string) {\r\n        return instance.post<{ password: string, token: string }, AxiosResponse<ResponseType<{ info: string }>>>('2.0/auth/set-new-password', {\r\n            password,\r\n            token\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport type ResponseType<T = {}> = {\r\n    data: T\r\n    error?: string\r\n}\r\n\r\nexport type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: string;\r\n    updated: string;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n}\r\n\r\n","const initialState = {\r\n    error: ''\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nconst SET_IS_ERROR = 'appReducer/SET_IS_ERROR'\r\n\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_IS_ERROR: {\r\n            return {...state,\r\n                 error: action.payload.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setAppErrorAC = (error:string) => ({type: SET_IS_ERROR, payload:{\r\n        error\r\n    }} as const)\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setAppErrorAC>","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../m3_DAL/API/api-common\";\r\nimport {setAppErrorAC} from \"./0n_App-reduser\";\r\n\r\n\r\nconst initialState = {\r\n    isRegistrated: false,\r\n    isLoggedIn: false,\r\n    email: '',\r\n    from: '' as string|undefined\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nconst SET_IS_REGISTRATED = 'authReducer/SET_IS_REGISTRATED'\r\nconst SET_IS_LOGGED_IN = 'authReducer/SET-IS-LOGGED-IN'\r\nconst SET_EMAIL_PASSWORD_RECOVERY = 'authReducer/SENT-EMAIL-FOR-PASSWORD-RECOVERY'\r\n\r\n\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_IS_REGISTRATED:{\r\n            return {...state, isRegistrated: action.payload.isRegistrated }\r\n        }\r\n        case SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.payload.isLoggedIn}\r\n        case SET_EMAIL_PASSWORD_RECOVERY:\r\n            return {...state, email: action.payload.email , from: action.payload.from }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setIsRegistratedAC = ( isRegistrated: boolean) => ({type: SET_IS_REGISTRATED, payload:{\r\n        isRegistrated\r\n    }} as const)\r\nexport const setIsLoginInAC = ( isLoggedIn: boolean) => ({type: SET_IS_LOGGED_IN, payload:{\r\n        isLoggedIn\r\n    }} as const)\r\nexport const setEmailForPasswordRecoveryAC = ( email: string, from?:string) => ({type: SET_EMAIL_PASSWORD_RECOVERY, payload:{\r\n        email, from\r\n    }} as const)\r\n\r\n// thunks\r\nexport const RegistrateTC = (email:string, password:string ) => (dispatch: Dispatch<ActionsType>) => {\r\n     authAPI.register(email, password)\r\n         .then((res)=> dispatch(setIsRegistratedAC (true)))\r\n         .catch((e)=> {\r\n             let error  = e.response ? e.response.data.error :  (e.message + ', more details in the console');\r\n             dispatch(setAppErrorAC(error))\r\n         })\r\n}\r\nexport const LoginInTC = (email: string, password: string, rememberMe: boolean)=>(dispatch: Dispatch<ActionsType>)=>{\r\nauthAPI.login(email, password, rememberMe)\r\n    .then( ()=>dispatch(setIsLoginInAC(true)) )\r\n    .catch((e)=> {\r\n        let error  = e.response ? e.response.data.error :  (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n    })\r\n}\r\n\r\nexport const setEmailForPasswordRecoveryTC = (email: string,emailFromWho?: string)=>(dispatch: Dispatch)=>{\r\n    authAPI.forgotPassword(email,emailFromWho)\r\n        .then(()=>dispatch(setEmailForPasswordRecoveryAC(email,emailFromWho) ))\r\n        .catch((e)=> {\r\n            let error  = e.response ? e.response.data.error :  (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n}\r\n\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsRegistratedAC>\r\n    |ReturnType<typeof setIsLoginInAC>\r\n    |ReturnType<typeof setAppErrorAC>\r\n    |ReturnType <typeof setEmailForPasswordRecoveryAC>","import React, {ChangeEventHandler, MouseEventHandler, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../1_main/m2_BLL/store\";\r\nimport {LoginInTC} from \"../../../1_main/m2_BLL/1n_Auth-reduser\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\nimport {setAppErrorAC} from \"../../../1_main/m2_BLL/0n_App-reduser\";\r\nimport {PATH} from \"../../../1_main/m1-UI/routes/Routes\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn= useSelector<AppRootStateType,boolean>(store=>store.login.isLoggedIn)\r\n    const error= useSelector<AppRootStateType,string>(store => store.app.error)\r\n\r\n    const [email,setEmail]= useState<string>('')\r\n    const [password,setPassword]= useState<string>('')\r\n    const [rememberMe,setRememberMe]= useState<boolean>(false)\r\n\r\n    const onChangeEmailHandler:ChangeEventHandler<HTMLInputElement>=(e)=>{\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setAppErrorAC(''))\r\n    }\r\n    const onChangePasswordHandler:ChangeEventHandler<HTMLInputElement>=(e)=>{\r\n        setPassword(e.currentTarget.value)\r\n        dispatch(setAppErrorAC(''))\r\n\r\n    }\r\n    const checkBoxHandler:ChangeEventHandler<HTMLInputElement>  =(e)=>{\r\n        setRememberMe(e.target.checked)\r\n    }\r\n    const onClickHandler:MouseEventHandler<HTMLButtonElement> = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(LoginInTC(email, password, rememberMe))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(setAppErrorAC(''))\r\n        if(!isLoggedIn){\r\n            return\r\n        }\r\n\r\n    },[])\r\n\r\n  if(isLoggedIn){\r\n      return <Navigate to={'/profile'} />\r\n  }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>LOGIN PAGE</h2>\r\n            {error !=='' ? <div> {error} </div>:<div> </div>}\r\n            <form>\r\n                <label>\r\n                    Email:\r\n                    <input type={\"email\"} name={'email'} value={email} onChange={onChangeEmailHandler}/>\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type={\"password\"} value={password} onChange={onChangePasswordHandler}/>\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type={\"checkbox\"} value={'rememberMe'} onChange={checkBoxHandler}/>\r\n                </label>\r\n                <NavLink  to={PATH.FORGOT_PAGE}>Forgot Password</NavLink>\r\n                <button type={'submit'} onClick={onClickHandler}>Register</button>\r\n            </form>\r\n            <div>Don't have an account?</div>\r\n            <a href={'/registration'}>Sign up</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/SmoothJauntyBighornedsheep-max-1mb.61c33806.gif\";","import React from 'react';\nimport Img from '../../../assets/image/SmoothJauntyBighornedsheep-max-1mb.gif';\nimport s from './Error.module.css'\n\nfunction Error404() {\n    return (\n        <div className={s.container}>\n            <div className={s.a}>\n                <h1>404</h1>\n                <h2>Ooh shit!</h2>\n                <div>\n                    <span>You're lost... </span><br/>\n                    <span>back to homepage</span>\n                </div>\n            </div>\n            <div className={s.b}>\n                <img src={Img} alt={\"travolta\"}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            PROFILE PAGE\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, {ChangeEventHandler, MouseEventHandler, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RegistrateTC} from \"../../../1_main/m2_BLL/1n_Auth-reduser\";\r\nimport {AppRootStateType} from \"../../../1_main/m2_BLL/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {setAppErrorAC} from \"../../../1_main/m2_BLL/0n_App-reduser\";\r\n\r\nconst Registration = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegistrated= useSelector<AppRootStateType,boolean>(store=>store.login.isRegistrated)\r\n    const error= useSelector<AppRootStateType,string>(store => store.app.error)\r\n\r\n    const [email,setEmail]= useState<string>('')\r\n    const [password,setPassword]= useState<string>('')\r\n    const [password2,setPassword2]= useState<string>('')\r\n\r\n    const onChangeEmailHandler:ChangeEventHandler<HTMLInputElement>=(e)=>{\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n   const onChangePasswordHandler:ChangeEventHandler<HTMLInputElement>=(e)=>{\r\n       setPassword(e.currentTarget.value)\r\n   }\r\n    const onChangePassword2Handler:ChangeEventHandler<HTMLInputElement>=(e)=>{\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n   const onClickHandler:MouseEventHandler<HTMLButtonElement> = (e)=>{\r\n       e.preventDefault()\r\n       dispatch(RegistrateTC(email, password))\r\n\r\n   }\r\n    useEffect(()=>{\r\n        dispatch(setAppErrorAC(''))\r\n        if(!isRegistrated){\r\n            return\r\n        }\r\n    },[])\r\n\r\n   if (isRegistrated){\r\n        return <Navigate to={'/login'} />\r\n    }\r\n\r\n    return (\r\n        <div id={'registration'}>\r\n            <h2>REGISTRATION PAGE</h2>\r\n            {error !=='' ? <div> {error} </div>:<div> </div>}\r\n            <form>\r\n                <label>\r\n                    Email:\r\n                    <input type={\"email\"} name={'email'} value={email} onChange={onChangeEmailHandler}/>\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type={\"password\"} value={password} onChange={onChangePasswordHandler}/>\r\n                </label>\r\n                <label>\r\n                    Confirm Password:\r\n                    <input type={\"password\"} value={password2} onChange={onChangePassword2Handler}/>\r\n                </label>\r\n                <button type={'submit'} onClick={onClickHandler}>Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","import React, {ChangeEventHandler, useState} from 'react';\r\nimport {PATH} from \"../../../1_main/m1-UI/routes/Routes\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setEmailForPasswordRecoveryTC} from \"../../../1_main/m2_BLL/1n_Auth-reduser\";\r\n\r\nconst PasswordRecovery = () => {\r\n    const dispatch = useDispatch()\r\n    const [email,setEmail]= useState<string>('')\r\n    const onChangeEmailHandler:ChangeEventHandler<HTMLInputElement>=(e)=>{\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n    const onClickHandler=()=>{\r\n        dispatch(setEmailForPasswordRecoveryTC(email, 'maya-mno@yandex.ru'))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Forgot your Password?</h2>\r\n            <form>\r\n                <label>\r\n                Email:\r\n                <input type={\"email\"} name={'email'} value={email} onChange={onChangeEmailHandler}/>\r\n            </label>\r\n            </form>\r\n            <span>Enter your email address and we will send you future instructions</span>\r\n            <button onClick={onClickHandler}>Send instructions</button>\r\n            <span>Did your remember your password?</span>\r\n            <a href={'#/login'}>Try to logging in</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordRecovery;","import Test from \"../../../2_feaches_HW/f0-test/test\";\r\nimport Login from \"../../../2_feaches_HW/f1-auth/a1_login/Login\";\r\nimport Error404 from \"../../../2_feaches_HW/f1-auth/a4_error404/Error404\";\r\nimport React from \"react\";\r\nimport {Route, Routes} from 'react-router-dom'\r\nimport Profile from \"../../../2_feaches_HW/f1-auth/a3_profile/Profile\";\r\nimport Registration from \"../../../2_feaches_HW/f1-auth/a2_registration/Registration\";\r\nimport PasswordRecovery from \"../../../2_feaches_HW/f1-auth/a4_password/PasswordRecovery\";\r\n\r\nexport const PATH = {\r\n    START_PAGE: '/*',\r\n    TEST_PAGE: '/test',\r\n    LOGIN_PAGE: '/login',\r\n    ERROR404_PAGE: '/error404',\r\n    PROFILE_PAGE: '/profile',\r\n    REGISTRATION_PAGE: '/registration',\r\n    FORGOT_PAGE:'/forgot_password'\r\n}\r\n\r\nfunction Routing() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={PATH.START_PAGE} element={<Test/>}/>\r\n                <Route path={PATH.TEST_PAGE} element={<Test/>}/>\r\n                <Route path={PATH.LOGIN_PAGE} element={<Login/>}/>\r\n                <Route path={PATH.REGISTRATION_PAGE} element={<Registration/>}/>\r\n                <Route path={PATH.PROFILE_PAGE} element={<Profile />}/>\r\n                <Route path={PATH.ERROR404_PAGE} element={<Error404/>}/>\r\n                <Route path={PATH.FORGOT_PAGE} element={<PasswordRecovery />}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routing\r\n","import React, {useState} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {PATH} from \"../routes/Routes\";\r\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    const [checked , setChecked] =useState<boolean>(false)\r\n    const onChangeChecked = (checked:boolean) =>setChecked(checked)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <SuperCheckbox id='check-menu' onChangeChecked={onChangeChecked} />\r\n            <nav className={checked? `${s.mainMenu} ${s.mainMenuChecked}` :s.mainMenu}>\r\n                <NavLink to={PATH.TEST_PAGE} className={s.item}> test |</NavLink>\r\n                <NavLink to={PATH.LOGIN_PAGE} className={s.item}> login | </NavLink>\r\n                <NavLink to={PATH.REGISTRATION_PAGE} className={s.item}> registration | </NavLink>\r\n                <NavLink to={PATH.PROFILE_PAGE} className={s.item}> profile | </NavLink>\r\n                <NavLink to={PATH.ERROR404_PAGE} className={s.item}>  error404 </NavLink>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Header/Header\";\r\nimport Routing from \"./routes/Routes\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Header />\r\n        <Routing />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {authReducer} from \"./1n_Auth-reduser\";\r\nimport {appReducer} from \"./0n_App-reduser\";\r\n\r\nconst rootReducer = combineReducers({\r\n    login: authReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './1_main/m1-UI/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./1_main/m2_BLL/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <Provider store={store}>\r\n              <App/>\r\n          </Provider>\r\n      </BrowserRouter>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"test_main__3m-0O\",\"column\":\"test_column__3gQop\",\"header\":\"test_header__3jhfc\"};"],"sourceRoot":""}